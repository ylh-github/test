
 package code_fb.service.impl;
 import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Service;
import code_fb.entity.CLAUSE_M1S1;
import code_fb.mapper.CLAUSE_Mapper;
import code_fb.request.CLAUSE_Request_M1S1;
import code_fb.response.CLAUSE_Response_M1S1;
import code_fb.service.CLAUSE_Service;
import code_fb_cg.util.ClauseUtil;
import code_fb_customer.CLAUSE_Customer;
import transfer.EmptyData;
import transfer.EmptyTag;
import transfer.Errcode;
import transfer.ResponseObject;
import transfer.ResponseObjectBuilder;
import vip.toda.piper.auth.web.client.User;

 @Service("clauseService")
 public class CLAUSE_ServiceImpl implements CLAUSE_Service
 {
 	@Autowired
 	@Qualifier("clauseMapper")
 	public CLAUSE_Mapper frcDao;
   @Autowired
   public  CLAUSE_Customer clauseCustomer;
 public ResponseObject<EmptyTag, CLAUSE_Response_M1S1> M1S11Q(CLAUSE_Request_M1S1 clauseRequestM1s1, String session){
 String msg="查询成功";
 	ResponseObjectBuilder builder  = ResponseObjectBuilder.create();
 	CLAUSE_Response_M1S1 data = new CLAUSE_Response_M1S1();
 data.setClauseM1s1(frcDao.M1S11QCLAUSE_M1S1(clauseRequestM1s1.getClauseM1s1().get(0) ));
 return builder.data(data).msg(msg).errcode(Errcode.Success).session(session).build();
 }
 public ResponseObject<EmptyTag, EmptyData> M1S11A(User user,CLAUSE_Request_M1S1 clauseRequestM1s1 ,String session){
String msg=""; 
 ResponseObjectBuilder builder = ResponseObjectBuilder.create();
 	int row0 = 0;
 List<CLAUSE_M1S1>clauseM1s1 = clauseRequestM1s1.getClauseM1s1();
   String ss_ret0 = "";
 	ss_ret0 =  clauseCustomer.check_M1S11A_CLAUSE_M1S1(clauseRequestM1s1);
 if (ss_ret0.indexOf("success") != -1)
 { 
 if(ss_ret0.length() > 10){ 
}
//工具类 去空格
 ClauseUtil clauseUtil = new ClauseUtil();
 List<CLAUSE_M1S1> addClause = clauseUtil.addClause(clauseM1s1);
 	row0= frcDao.M1S11ACLAUSE_M1S1(addClause);
 	if(row0 < 0){
 msg = msg+"CLAUSE_M1S1保存成功" ;

 	return builder.errcode(Errcode.Success).msg(msg).session(session).build(); 
 	}else{
 		return builder.errcode(Errcode.FailParameterError).msg(msg).session(session).build();	
 	}
 }
 else {
 		return builder.errcode(Errcode.FailParameterError).msg(ss_ret0).session(session).build();	
 }
 }
 public ResponseObject<EmptyTag, EmptyData> M1S11U(User user,CLAUSE_Request_M1S1 clauseRequestM1s1 ,String session){String msg=""; 

 ResponseObjectBuilder builder = ResponseObjectBuilder.create();
 List<CLAUSE_M1S1>clauseM1s1 = clauseRequestM1s1.getClauseM1s1();
 	int row0 = 0;
   String ss_ret0 = "";
 	ss_ret0 =  clauseCustomer.check_M1S11U_CLAUSE_M1S1(clauseRequestM1s1);
 if (ss_ret0.indexOf("success") != -1)
 {
 if(ss_ret0.length() > 10){ 
  msg = ss_ret0; 
}

 	row0= frcDao.M1S11UCLAUSE_M1S1(clauseM1s1);
 	if(row0 < 0) {
 msg = msg+"CLAUSE_M1S1修改成功" ;

 	return builder.errcode(Errcode.Success).msg(msg).session(session).build(); 
 	}else{
 	return builder.errcode(Errcode.FailParameterError).msg(msg).session(session).build();	
 	}
 }
 	else {
 		return builder.errcode(Errcode.FailParameterError).msg(ss_ret0).session(session).build();	
 }
 }
 public ResponseObject<EmptyTag, EmptyData> M1S11D(User user,CLAUSE_Request_M1S1 clauseRequestM1s1 ,String session){String msg=""; 

 ResponseObjectBuilder builder = ResponseObjectBuilder.create();
 	int row0 = 0;
 List<CLAUSE_M1S1>clauseM1s1 = clauseRequestM1s1.getClauseM1s1();
   String ss_ret0 = "";
 	ss_ret0 =  clauseCustomer.check_M1S11D_CLAUSE_M1S1(clauseRequestM1s1);
 if (ss_ret0.indexOf("success") != -1)
 {
 if(ss_ret0.length() > 10){ 
  msg = ss_ret0; 
}

 	row0= frcDao.M1S11DCLAUSE_M1S1(clauseM1s1);
 	if(row0 < 0) {
 msg = msg+"CLAUSE_M1S1删除成功" ;

 	}else{
 	return builder.errcode(Errcode.FailParameterError).msg(msg).session(session).build();	
 	}
 }
 	else
 {
 		return builder.errcode(Errcode.FailParameterError).msg(msg).session(session).build();	
 }
 	return builder.errcode(Errcode.Success).msg(msg).session(session).build(); 
 }
 
public ResponseObject<EmptyTag, CLAUSE_Response_M1S1> selectContType(CLAUSE_Request_M1S1 clauseRequestM1s1, String session) {
	 	ResponseObjectBuilder builder  = ResponseObjectBuilder.create();
	 	CLAUSE_Response_M1S1 data = new CLAUSE_Response_M1S1();
	 	//clauseRequestM1s1.getClauseM1s1().get(0) 
	 data.setClauseM1s1(frcDao.selectContType());
	 return builder.data(data).msg("查询成功！！！").errcode(Errcode.Success).session(session).build();
}
public ResponseObject<EmptyTag, CLAUSE_Response_M1S1> getContTypeInfo(CLAUSE_Request_M1S1 clauseRequestM1s1, String session) {
	ResponseObjectBuilder builder  = ResponseObjectBuilder.create();
 	CLAUSE_Response_M1S1 data = new CLAUSE_Response_M1S1();
 data.setClauseM1s1(frcDao.getContTypeInfo(clauseRequestM1s1.getClause_M1S1()));
 return builder.data(data).msg("查询成功！！！").errcode(Errcode.Success).session(session).build();
}
 }