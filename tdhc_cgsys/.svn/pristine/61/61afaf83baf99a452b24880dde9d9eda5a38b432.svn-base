package code_fb_cg.util;

import java.util.ArrayList;
import java.util.List;

import code_fb.entity.CLAUSE_M1S1;

public class ClauseUtil {

	public List<CLAUSE_M1S1>  addClause(List<CLAUSE_M1S1> clauseM1s1) {
		List<CLAUSE_M1S1> list = new ArrayList<CLAUSE_M1S1>();
		for (CLAUSE_M1S1 clause_M1S1 : clauseM1s1) {
			CLAUSE_M1S1 clause = new CLAUSE_M1S1();
			//合同类型
			clause.setcCreaterTpCgclausedata(clause_M1S1.getcCreaterTpCgclausedata());
			clause.setcCreatetimeTpCgclausedata(clause_M1S1.getcCreatetimeTpCgclausedata());
			clause.setcContypeTpCgclausedata(respUtil(clause_M1S1.getcContypeTpCgclausedata()));
			clause.setcSw01TpCgclausedata(respUtil(clause_M1S1.getcSw01TpCgclausedata()));
			clause.setcSw02TpCgclausedata(respUtil(clause_M1S1.getcSw02TpCgclausedata()));
			clause.setcSw03TpCgclausedata(respUtil(clause_M1S1.getcSw03TpCgclausedata()));
			clause.setcSw04TpCgclausedata(respUtil(clause_M1S1.getcSw04TpCgclausedata()));
			clause.setcSw05TpCgclausedata(respUtil(clause_M1S1.getcSw05TpCgclausedata()));
			clause.setcSw06TpCgclausedata(respUtil(clause_M1S1.getcSw06TpCgclausedata()));
			clause.setcSw07TpCgclausedata(respUtil(clause_M1S1.getcSw07TpCgclausedata()));
			clause.setcSw08TpCgclausedata(respUtil(clause_M1S1.getcSw08TpCgclausedata()));
			clause.setcSw09TpCgclausedata(respUtil(clause_M1S1.getcSw09TpCgclausedata()));
			clause.setcSw10TpCgclausedata(respUtil(clause_M1S1.getcSw10TpCgclausedata()));
			clause.setcSw11TpCgclausedata(respUtil(clause_M1S1.getcSw11TpCgclausedata()));
			clause.setcSw12TpCgclausedata(respUtil(clause_M1S1.getcSw12TpCgclausedata()));
			clause.setcSw13TpCgclausedata(respUtil(clause_M1S1.getcSw13TpCgclausedata()));
			clause.setcSw14TpCgclausedata(respUtil(clause_M1S1.getcSw14TpCgclausedata()));
			clause.setcSw15TpCgclausedata(respUtil(clause_M1S1.getcSw15TpCgclausedata()));
			clause.setcSw16TpCgclausedata(respUtil(clause_M1S1.getcSw16TpCgclausedata()));
			clause.setcSw17TpCgclausedata(respUtil(clause_M1S1.getcSw17TpCgclausedata()));
			clause.setcSw18TpCgclausedata(respUtil(clause_M1S1.getcSw18TpCgclausedata()));
			clause.setcSw19TpCgclausedata(respUtil(clause_M1S1.getcSw19TpCgclausedata()));
			clause.setcSw20TpCgclausedata(respUtil(clause_M1S1.getcSw20TpCgclausedata()));
			clause.setcSw21TpCgclausedata(respUtil(clause_M1S1.getcSw21TpCgclausedata()));
			clause.setcSw22TpCgclausedata(respUtil(clause_M1S1.getcSw22TpCgclausedata()));
			clause.setcSw23TpCgclausedata(respUtil(clause_M1S1.getcSw23TpCgclausedata()));
			clause.setcSw24TpCgclausedata(respUtil(clause_M1S1.getcSw24TpCgclausedata()));
			clause.setcSw25TpCgclausedata(respUtil(clause_M1S1.getcSw25TpCgclausedata()));
			clause.setcSw26TpCgclausedata(respUtil(clause_M1S1.getcSw26TpCgclausedata()));
			clause.setcSw27TpCgclausedata(respUtil(clause_M1S1.getcSw27TpCgclausedata()));
			clause.setcSw28TpCgclausedata(respUtil(clause_M1S1.getcSw28TpCgclausedata()));
			clause.setcSw29TpCgclausedata(respUtil(clause_M1S1.getcSw29TpCgclausedata()));
			clause.setcSw30TpCgclausedata(respUtil(clause_M1S1.getcSw30TpCgclausedata()));
			clause.setcSw31TpCgclausedata(respUtil(clause_M1S1.getcSw31TpCgclausedata()));
			clause.setcSw32TpCgclausedata(respUtil(clause_M1S1.getcSw32TpCgclausedata()));
			clause.setcSw33TpCgclausedata(respUtil(clause_M1S1.getcSw33TpCgclausedata()));
			clause.setcSw34TpCgclausedata(respUtil(clause_M1S1.getcSw34TpCgclausedata()));
			clause.setcSw35TpCgclausedata(respUtil(clause_M1S1.getcSw35TpCgclausedata()));
			clause.setcSw36TpCgclausedata(respUtil(clause_M1S1.getcSw36TpCgclausedata()));
			clause.setcSw37TpCgclausedata(respUtil(clause_M1S1.getcSw37TpCgclausedata()));
			clause.setcSw38TpCgclausedata(respUtil(clause_M1S1.getcSw38TpCgclausedata()));
			clause.setcSw39TpCgclausedata(respUtil(clause_M1S1.getcSw39TpCgclausedata()));
			clause.setcSw40TpCgclausedata(respUtil(clause_M1S1.getcSw40TpCgclausedata()));
			clause.setcSw41TpCgclausedata(respUtil(clause_M1S1.getcSw41TpCgclausedata()));
			clause.setcSw42TpCgclausedata(respUtil(clause_M1S1.getcSw42TpCgclausedata()));
			list.add(clause);
		}
		return list;
	}
	private static String respUtil(String str) {
		if(str==null) {
			str ="";
		}else{
			str=str.replaceAll(" ", "").replaceAll("[\\r]", "").replaceAll("[\\n]", "");
		}
		return str;
	}
}
